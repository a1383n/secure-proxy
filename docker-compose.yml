volumes:
    storage_volume:
    database_volume:
    redis_volume:

services:
    app:
        image: ghcr.io/a1383n/secure-proxy:master
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - "storage_volume:/var/www/html/storage"
        environment: &app_environments
            TZ: ${TZ:-Asia/Tehran}
            APP_KEY: ${APP_KEY}
            APP_DEBUG: ${APP_DEBUG-false}
            APP_ENV: ${APP_ENV-production}
            CONTAINER_ROLE: "OCTANE"
            OCTANE_SERVER: "frankenphp"
            DB_CONNECTION: mysql
            DB_HOST: database
            DB_DATABASE: laravel
            DB_USERNAME: root
            DB_PASSWORD: password
            REDIS_HOST: redis
            SESSION_DRIVER: redis
            QUEUE_CONNECTION: redis
            CACHE_STORE: redis
        ports:
            - "8000:8000"

    queue:
        image: ghcr.io/a1383n/secure-proxy:master
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            <<: *app_environments
            CONTAINER_ROLE: "QUEUE"

    scheduler:
        image: ghcr.io/a1383n/secure-proxy:master
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            <<: *app_environments
            CONTAINER_ROLE: "SCHEDULER"

    database:
        image: mariadb:latest
        volumes:
            - "database_volume:/var/lib/mysql:Z"
        environment:
            TZ: Asia/Tehran
            MARIADB_ROOT_PASSWORD: password
            MARIADB_AUTO_UPGRADE: 1
            MARIADB_DATABASE: laravel

    redis:
        image: redis:alpine
        volumes:
            - "redis_volume:/data"
        environment:
            TZ: Asia/Tehran

    dns:
        image: ghcr.io/a1383n/dns_reverse_proxy:master
        tty: true
        environment:
            ENDPOINT_URL: http://app:8000/api/resolve
        ports:
            - "53:53/udp"
            - "53:53/tcp"

    proxy:
        image: ghcr.io/a1383n/secureforward-proxy:master
        environment:
            API_ENDPOINT: http://app:8000/api
        ports:
            - "80:80"
            - "443:443"
